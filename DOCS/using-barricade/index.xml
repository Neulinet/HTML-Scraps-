<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Using-barricade</title>
    <link>https://docs.barricade.io/using-barricade/</link>
    <language>en-us</language>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>Security Rating System</title>
      <link>https://docs.barricade.io/using-barricade/security-rating-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/security-rating-system/</guid>
      <description>

&lt;p&gt;Our security rating system is made to be simple by design, so that anyone can understand what is happening on their infrastructure regardless of their level of security knowledge or position.&lt;/p&gt;

&lt;h2 id=&#34;ratings:159124d2da0896f1a39f7f69d4d3aeba&#34;&gt;Ratings&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/ranking.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/ranking.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We have split security threats into Events, Attacks and Incidents. We track events, flag attacks, monitor their progress and alert you when they become incidents.&lt;/p&gt;

&lt;table class=&#34;risk&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Someone tried and failed to attack your app &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Attack&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Someone makes multiple failed attack attempts &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Incident&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;An attacker succeeds in their attack - your system is breached&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Adding Team Members</title>
      <link>https://docs.barricade.io/using-barricade/adding-team-members/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/adding-team-members/</guid>
      <description>

&lt;p&gt;You can invite colleagues to join your Barricade team account, granting access to your Agents and their findings from your servers.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll find the Team controls in the Settings &amp;gt; Team &amp;gt; &lt;a href=&#34;https://app.barricade.io/dashboard/settings/team/members&#34;&gt;Members&lt;/a&gt; page.&lt;/p&gt;

&lt;h3 id=&#34;team-permissions:639f3153471e5042a626a354e5707952&#34;&gt;Team Permissions&lt;/h3&gt;

&lt;p&gt;Teams are comprised of a single Admin user (the person who originally created the account) and Members, who have most of the same permissions - except when it comes to billing and being able to remove other users from the account.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a breakdown of the permissions per role:&lt;/p&gt;

&lt;table class=&#34;compare&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt; &lt;/th&gt;&lt;th&gt;&lt;strong&gt;Admin&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Member&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Install Agents:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Edit Agents:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;View Cases:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mark Cases as Resolved:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Invite Team Members:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Remove Team Members:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-close&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Manage Team Notifcations:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Manage Team Integrations:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;View &amp;amp; Edit Billing Details:&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-check&#34;&gt; &lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em class=&#34;fa fa-close&#34;&gt; &lt;/em&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;your-team:639f3153471e5042a626a354e5707952&#34;&gt;Your Team&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://app.barricade.io/dashboard/settings/team/profile&#34;&gt;team profile page&lt;/a&gt; allows you to edit your team name. Only the admin can change the name of a team.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-01.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-01.png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;how-to-invite-members:639f3153471e5042a626a354e5707952&#34;&gt;How to Invite Members&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://app.barricade.io/dashboard/settings/team/invitations&#34;&gt;invitations&lt;/a&gt; page lets you add new members via email address: &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-02.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-02.gif&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enter the email address and click the Invite button.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The page will show that an email invite has been issued.
You can revoke any unaccepted invitations by clicking the &amp;lsquo;X&amp;rsquo; on the right:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-03.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-03.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The new member will receive a confirmation email with an activation link:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-04.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-04.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once activated, they can login and will have read-access to information from your Agents&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;how-to-remove-members:639f3153471e5042a626a354e5707952&#34;&gt;How to Remove Members&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-05.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/11-team-05.gif&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To remove members you must be logged in as the Team Admin&lt;/li&gt;
&lt;li&gt;Visit the app &lt;a href=&#34;https://app.barricade.io/dashboard/settings/team/members&#34;&gt;Team page&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Click the &amp;lsquo;X&amp;rsquo; icon to the right of the member name &lt;/li&gt;
&lt;li&gt;Confirm removal of that member&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Slack Integration</title>
      <link>https://docs.barricade.io/using-barricade/slack-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/slack-integration/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-logo.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-logo.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://slack.com&#34;&gt;Slack&lt;/a&gt; is a real-time messaging app for teams that allows you to communicate quickly and easily. We use Slack everyday at Barricade; to communicate and to share security notifications. &lt;/p&gt;

&lt;p&gt;You can integrate Slack with Barricade to notify your team when serious security incidents occur:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-message.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-message.png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;setting-up-the-integration:39b09a0fb6bc114f8cde3db8390945c8&#34;&gt;Setting up the Integration&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Login to Barricade and go to the Settings &amp;gt; Notifications &amp;gt; &lt;a href=&#34;https://app.barricade.io/dashboard/settings/notification/slack&#34;&gt;Slack Notifications&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on the switch to &lt;strong&gt;Enable&lt;/strong&gt; the integration:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-enable.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-enable.gif&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Follow the Integration Instructions that appear onscreen.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click the &lt;a href=&#34;https://my.slack.com/services/new/incoming-webhook&#34;&gt;link to create a new Incoming Webhook&lt;/a&gt; on slack.com&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Set a channel for Barricade to post to:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-select-channel.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-select-channel.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click the Add button.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Copy&lt;/strong&gt; the Webhook URL that appears under &amp;lsquo;Setup Instructions&amp;rsquo;&lt;br /&gt;
It will look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://hooks.slack.com/services/A01BCDE23/A01B2CDEF/aB0c1DefGH23iJKl45M6nO7P
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Return to the &lt;a href=&#34;https://app.barricade.io/dashboard/settings/notification/slack&#34;&gt;Slack integration page&lt;/a&gt; in the Barricade app.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Paste the Webhook URL into the form:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-paste.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/13-slack-paste.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Save Integration&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can customize the integration to choose what items get posted to Slack, by checking the boxes on the right to activate more notifications.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By default, only Incidents &lt;em&gt;(our most serious classification)&lt;/em&gt; are sent as notifications.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hipchat Integration</title>
      <link>https://docs.barricade.io/using-barricade/hipchat-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/hipchat-integration/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.hipchat.com/&#34;&gt;HipChat&lt;/a&gt; is team chat that&amp;rsquo;s actually built for business - a centralized place for group and private chat, file sharing, and integrations.&lt;/p&gt;

&lt;p&gt;You can integrate HipChat with Barricade to share security notifications with your team:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-01.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-01.png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;setting-up-the-integration:dca5d5bd8580eafd280a3fc4c35e98a6&#34;&gt;Setting up the Integration&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Login to Barricade and go to the Settings &amp;gt; Notifications &amp;gt; &lt;a href=&#34;https://app.barricade.io/dashboard/settings/notification/hipchat&#34;&gt;HipChat Notifications&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on the switch to &lt;strong&gt;Enable&lt;/strong&gt; the integration:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-enable.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-enable.gif&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Follow the Integration Instructions that appear onscreen -&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open your Hipchat window, and navigate to the channel you want to send notifications to. We recommend creating a new room named &lt;em&gt;Barricade.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open the Room options and select &lt;strong&gt;Integrations&lt;/strong&gt;.
&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-select.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-select.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;From the Integrations page click on &lt;strong&gt;Tokens&lt;/strong&gt; in the menu on the right, and you&amp;rsquo;ll see a &lt;strong&gt;Create new token&lt;/strong&gt; form appear at the bottom of the page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-set-label.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-set-label.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Set a descriptive label in the text field at the bottom of the page. In the second field, select &lt;em&gt;Send Notification&lt;/em&gt; and click &lt;em&gt;Create&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/14-tokens.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/14-tokens.gif&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The page will display a Room Notification Token, a string that looks something like this: &lt;code&gt;9KFell1q8yZpcZTIWwUaDohs4gNfw7C2LHCyHWCT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-copy-token.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-copy-token.png&#34; /&gt;&lt;br /&gt;
&lt;strong&gt;Copy the Token&lt;/strong&gt;, and return to the &lt;a href=&#34;https://app.barricade.io/dashboard/settings/notification/hipchat&#34;&gt;HipChat page&lt;/a&gt; in the Barricade app.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Paste the token into the form, under the Instructions, and add a label for the HipChat channel you wish to post notifications to:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-save.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-save.gif&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click &lt;em&gt;Save Integration&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can customize the integration to choose what items get posted to HipChat, by checking the boxes on the right to activate more notifications.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&amp;ndash;&lt;/p&gt;

&lt;p&gt;By default, only Incidents &lt;em&gt;(our most serious classification)&lt;/em&gt; are sent as notifications.&lt;/p&gt;

&lt;h3 id=&#34;troubleshooting-integrations-isn-t-available-in-hipchat:dca5d5bd8580eafd280a3fc4c35e98a6&#34;&gt;Troubleshooting: Integrations isn&amp;rsquo;t available in HipChat&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-no-integration.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/14-hipchat-no-integration.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In HipChat, accounts can be configured to restrict access to Integration and Token settings. If Integrations appears as a greyed-out, disabled option; you&amp;rsquo;ll need to contact theHipChat account owner.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Agents</title>
      <link>https://docs.barricade.io/using-barricade/installing-more-agents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/installing-more-agents/</guid>
      <description>

&lt;p&gt;During the &lt;a href=&#34;https://docs.barricade.io/hc/en-us/articles/205447438-Getting-Started&#34;&gt;account signup process&lt;/a&gt;, you will install your first monitoring Agent. Once that process is completed, you can repeat the original steps to install additional Agents at any time, allowing Barricade to watch over entire clusters of servers.&lt;/p&gt;

&lt;h2 id=&#34;how-to-install:d11bb84a6614a0a553bc4704d254e434&#34;&gt;How to Install&lt;/h2&gt;

&lt;p&gt;Inside the Barricade &lt;a href=&#34;https://app.barricade.io&#34;&gt;app&lt;/a&gt;, you&amp;rsquo;ll see a New Agent button in the top-right-hand corner:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/getting-started/drawer-opening.gif&#34; alt=&#34;https://docs.barricade.io/src/img/getting-started/drawer-opening.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instructions:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click the New Agent button to open the installer section&lt;/li&gt;
&lt;li&gt;Copy the install command&lt;/li&gt;
&lt;li&gt;Connect to your server and run the command (&lt;a href=&#34;https://docs.barricade.io/getting-started/#running-commands&#34;&gt;see our SSH guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;When the install command is finished, the new Agent will be detected automatically &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/getting-started/drawer-detection.gif&#34; alt=&#34;https://docs.barricade.io/src/img/getting-started/drawer-detection.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once detected, you can close the panel by clicking the &amp;lsquo;X&amp;rsquo; icon in the top-right corner, or choose to Install Another.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Amazon WAF Integration</title>
      <link>https://docs.barricade.io/using-barricade/aws-waf-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/aws-waf-integration/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://aws.amazon.com/waf/&#34;&gt;AWS Web Application Firewall (WAF)&lt;/a&gt; helps protect your web applications from common web exploits that could affect application availability, compromise security, or consume excessive resources. You can integrate AWS WAF with Barricade to make an intelligent and learning firewall.&lt;/p&gt;

&lt;h3 id=&#34;gotchas:b34a4a33b05843c6b2f999d8866d725e&#34;&gt;Gotchas&lt;/h3&gt;

&lt;p&gt;To use WAF; you must be using Amazon Web Services &lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/ec2/&#34;&gt;EC2&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/cloudfront/&#34;&gt;CloudFront&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;AWS WAF is not available on an individual-instance basis but is available if you are using Elastic Load Balancers (ELBs).&lt;/p&gt;

&lt;p&gt;Make sure that you read the AWS &lt;a href=&#34;https://aws.amazon.com/waf/pricing/&#34;&gt;WAF pricing&lt;/a&gt; thoroughly.&lt;/p&gt;

&lt;p&gt;Barricade does not charge you for using AWS WAF, but rules you add through the Barricade integration will incurr charges on your AWS account.&lt;/p&gt;

&lt;h3 id=&#34;setting-up-the-integration:b34a4a33b05843c6b2f999d8866d725e&#34;&gt;Setting up the Integration&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Login to Barricade and go to the Settings &amp;gt; Integrations &amp;gt; &lt;a href=&#34;https://app.barricade.io/dashboard/settings/&#34;&gt;Amazon AWS WAF Integration&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on the switch to &lt;strong&gt;Enable&lt;/strong&gt; the integration&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Follow the Security Group and Integration Instructions that appear onscreen for the &lt;a href=&#34;https://console.aws.amazon.com/console/home&#34;&gt;AWS Console&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you&amp;rsquo;ve created the required security groups as described below, &lt;strong&gt;copy&lt;/strong&gt; the access id and secret key which have been created with very limited access and enter them Click &lt;em&gt;Save Integration&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After saving the integration, a new WAF will be created in your AWS account with the name &lt;code&gt;BARRICADE-WAF&lt;/code&gt;. This is where we will add behaviours to block attackers from within Barricade. Added behaviours will incurr costs on your AWS account - see their &lt;a href=&#34;https://aws.amazon.com/waf/pricing/&#34;&gt;pricing&lt;/a&gt;.
_&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you&amp;rsquo;ve enabled the WAF, you will need to go to your &lt;a href=&#34;https://aws.amazon.com/cloudfront/&#34;&gt;CloudFront&lt;/a&gt; distribution settings, and set the AWS WAF Web ACL to &lt;code&gt;BARRICADE-WAF&lt;/code&gt; like such:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-02.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-02.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;giving-barricade-access-security-groups:b34a4a33b05843c6b2f999d8866d725e&#34;&gt;Giving Barricade Access (Security Groups)&lt;/h3&gt;

&lt;p&gt;We don&amp;rsquo;t want access to your servers. In fact, we want &lt;strong&gt;as little&lt;/strong&gt; access as possible to your account. We&amp;rsquo;ve broken down the steps you&amp;rsquo;ll need to follow in Amazon IAM to give us minimum access so we can manage your firewall, but nothing else.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;From the Amazon IAM section of your Amazon account, you will need to create a new user for Barricade. Follow this &lt;a href=&#34;https://console.aws.amazon.com/iam/home#users&#34;&gt;create a new user link&lt;/a&gt; - it&amp;rsquo;ll bring you right there.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a new user named &lt;strong&gt;barricade-waf &lt;/strong&gt;and make sure to check the &lt;em&gt;&amp;ldquo;Generate an access key for each user&amp;rdquo;&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-03.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-03.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;On the next step, after the user is created, copy the &lt;strong&gt;access id&lt;/strong&gt; and &lt;strong&gt;secret key&lt;/strong&gt; that&amp;rsquo;s presented to you under &lt;em&gt;Show User Security Credentials:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-04.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-04.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You will now need to create a &lt;strong&gt;Policy&lt;/strong&gt;. We&amp;rsquo;ll give you the policy, don&amp;rsquo;t worry.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Go to the &lt;a href=&#34;https://console.aws.amazon.com/iam/home#policies&#34;&gt;AWS policy page&lt;/a&gt;, and click on &lt;strong&gt;Create Policy&lt;/strong&gt;, then &lt;strong&gt;Create Your Own Policy&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-05.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-05.png&#34; /&gt;
 &lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The next steps are tricky but we&amp;rsquo;ll give them to you here. You will need to name your policy, give it a description and set the policy. &lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Name&lt;/strong&gt; is pretty straightforward, we like descriptive names so we recommend: &lt;strong&gt;barricade-waf-integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Description&lt;/strong&gt; is up to you. We use a textual description so that in 6 months when new employees learn the platform they understand what this does.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Policy Document&lt;/strong&gt; now is slightly tricker. Just copy the following into the textarea and click on the &amp;ldquo;&lt;strong&gt;Create Policy&lt;/strong&gt;&amp;rdquo; button at the bottom right:&lt;/p&gt;

&lt;div class=&#34;code-box&#34; style=&#34;margin: 0px; width: 100%; height: 160px; overflow: scroll;&#34;&gt;


&lt;pre&gt;{
   &#34;Version&#34;:&#34;2012-10-17&#34;,
   &#34;Statement&#34;: [
      {
         &#34;Action&#34;: [
            &#34;waf:*&#34;,
            &#34;cloudfront:GetDistribution&#34;,
            &#34;cloudfront:GetDistributionConfig&#34;,
            &#34;cloudfront:UpdateDistribution&#34;,
            &#34;cloudfront:ListDistributions&#34;
         ],
         &#34;Effect&#34;: &#34;Allow&#34;,
         &#34;Resource&#34;: &#34;*&#34;
      }
   ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Almost there! The last step is to assign this policy to your newly created user - &lt;strong&gt;barricade-waf&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;On the &lt;a href=&#34;https://console.aws.amazon.com/iam/home#users/barricade-waf&#34;&gt;new user&amp;rsquo;s IAM page&lt;/a&gt; you will see an &lt;strong&gt;Attach Policy&lt;/strong&gt; button, click it and select the &lt;strong&gt;barricade-waf-integration&lt;/strong&gt; policy you created in Step 6. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;rsquo;s it. Now we can add firewall rules, but we don&amp;rsquo;t have to have access to your servers!&lt;/p&gt;

&lt;h3 id=&#34;linking-cloudfront-to-aws-waf:b34a4a33b05843c6b2f999d8866d725e&#34;&gt;Linking CloudFront to AWS WAF&lt;/h3&gt;

&lt;p&gt;The only way to currently use the Amazon AWS WAF is by connecting a created WAF to a CloudFront distribution. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You will only have to do this once (with Barricade)&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First, go to your &lt;a href=&#34;https://console.aws.amazon.com/cloudfront/home&#34;&gt;CloudFront page&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the distribution you are interested in linking the AWS WAF to.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are on your CloudFront Distribution&amp;rsquo;s page, click on the &lt;strong&gt;Edit&lt;/strong&gt; button. Then look for the &lt;strong&gt;AWS WAF Web ACL&lt;/strong&gt; option - yes, it&amp;rsquo;s quite the mouthful!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-06.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-06.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the &lt;strong&gt;BARRICADE-WAF &lt;/strong&gt;in the dropdown:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-07.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-07.png&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on &lt;strong&gt;Yes, Edit&lt;/strong&gt; confirmation button and wait until the &lt;em&gt;Distribution Status&lt;/em&gt; says &lt;strong&gt;Deployed&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;rsquo;s it, you now have a fully integrated detection system that learns from behaviour and can tell your firewall about new threats to block.&lt;/p&gt;

&lt;h3 id=&#34;adding-rules:b34a4a33b05843c6b2f999d8866d725e&#34;&gt;Adding Rules&lt;/h3&gt;

&lt;p&gt;Once the Integration is enabled, you can block a query with one click:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-08.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/15-awswaf-08.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Go to the &lt;a href=&#34;https://app.barricade.io/dashboard/overview&#34;&gt;overview page&lt;/a&gt; in the Barricade app, and open a security case - you should see &amp;lsquo;AWS Firewall&amp;rsquo; as an option in cases where blocking an attacker IP address is part of the recommendation.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: this option will only appear when the Agent has been identified as running on AWS EC2. For non AWS servers, only the default iptables option will be visible.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;removing-rules:b34a4a33b05843c6b2f999d8866d725e&#34;&gt;Removing Rules&lt;/h3&gt;

&lt;p&gt;At the current time, you will need delete the rules and firewall from your AWS account directly, via their &lt;a href=&#34;https://console.aws.amazon.com/console/home&#34;&gt;console&lt;/a&gt;. We are planning on adding much more evolved AWS WAF integration and management after having measured the interest.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out our blog post &lt;a href=&#34;https://blog.barricade.io/introducing-our-new-amazon-web-application-firewall-integration/&#34;&gt;Introducing Our New Amazon Web Application Firewall Integration&lt;/a&gt; for more background on this feature.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CloudFlare Integration</title>
      <link>https://docs.barricade.io/using-barricade/cloudflare-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/cloudflare-integration/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/changelog/31-cloudflare.png&#34; alt=&#34;https://docs.barricade.io/src/img/changelog/31-cloudflare.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cloudflare.com/&#34;&gt;CloudFlare&lt;/a&gt; makes DNS secure, fast and simple, as well as providing some really great DDoS protection and security features. You can integrate CloudFlare with Barricade to make an intelligent, learning firewall that can protect your infrastructure from things like DDoS and brute force attacks.&lt;/p&gt;

&lt;h3 id=&#34;gotchas:f647eb5d518fb3851d585ccce9a324b4&#34;&gt;Gotchas&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll need to be using both Barricade and &lt;a href=&#34;https://cloudflare.com/&#34;&gt;CloudFlare&lt;/a&gt; in order to integrate them - if you don&amp;rsquo;t already have a Barricade account, you can &lt;a href=&#34;https://app.barricade.io/&#34;&gt;sign up for free here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;setting-up-the-integration:f647eb5d518fb3851d585ccce9a324b4&#34;&gt;Setting up the Integration&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Login to Barricade and go to the Settings &amp;gt; Integrations &amp;gt; &lt;a href=&#34;https://app.barricade.io/dashboard/settings/integration/cloudflare&#34;&gt;CloudFlare Firewall&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on the switch to &lt;strong&gt;Enable&lt;/strong&gt; the integration.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Login to CloudFlare.com and open the &lt;a href=&#34;https://www.cloudflare.com/a/account/my-account&#34;&gt;My Account&lt;/a&gt; page. You&amp;rsquo;ll need to retrieve your Global API key:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/16-cloudflare-api.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/16-cloudflare-api.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Just so you know, &lt;strong&gt;we encrypt your key&lt;/strong&gt;, it is not stored in plaintext for security reasons.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Copy and paste your API key and your email address into the form on the CloudFlare Integration page in the Barricade app. Click the &amp;lsquo;Enable&amp;rsquo; button.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;rsquo;s it - now you can quickly utilize the CloudFlare firewall from within Barricade.&lt;/p&gt;

&lt;h3 id=&#34;using-the-integration:f647eb5d518fb3851d585ccce9a324b4&#34;&gt;Using the Integration&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll see a new &amp;lsquo;Add To Firewall&amp;rsquo; button alongside attack details, allowing you simple one-click blocking of attackers:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/16-cloudflare-button.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/16-cloudflare-button.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ndash;&lt;/p&gt;

&lt;p&gt;Read our &lt;a href=&#34;https://blog.barricade.io/cloudflare-meet-barricade/&#34;&gt;blog announcement&lt;/a&gt; for more background on this super useful integration!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C.I. Security Tests</title>
      <link>https://docs.barricade.io/using-barricade/ci-sec-testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/ci-sec-testing/</guid>
      <description>

&lt;p&gt;Continuous Integration Security Testing can be used alongside other test suites as you are developing - to better understand which parts of your application network might be at risk.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re big believers in &lt;a href=&#34;https://blog.barricade.io/continuous-security/&#34;&gt;continuous security&lt;/a&gt;, and want to help you incorporate security into the development lifecycle. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/16-sectests.png&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/16-sectests.png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;what-do-security-tests-check-for:7392f22a00640c36ba214df8def7b81e&#34;&gt;What do Security Tests check for?&lt;/h3&gt;

&lt;p&gt;The test will check your application network for a series of common vulnerabilities, based on the &lt;a href=&#34;http://wapiti.sourceforge.net/&#34;&gt;Wapiti&lt;/a&gt; scanner:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SQL Injection&lt;/li&gt;
&lt;li&gt;Cross Site Scripting (XSS)&lt;/li&gt;
&lt;li&gt;Htaccess Bypass&lt;/li&gt;
&lt;li&gt;Backup File&lt;/li&gt;
&lt;li&gt;File Disclosure&lt;/li&gt;
&lt;li&gt;Potentially Dangerous File&lt;/li&gt;
&lt;li&gt;CRLF Injection&lt;/li&gt;
&lt;li&gt;File Handling &lt;/li&gt;
&lt;li&gt;Commands Execution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: &lt;em&gt;These checks are to help you identify any security bugs in your app, before they are shipped - but they do not guarantee that your app is fully secure from potential attacks.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;security-tests-with-webhooks:7392f22a00640c36ba214df8def7b81e&#34;&gt;Security Tests with Webhooks&lt;/h3&gt;

&lt;p&gt; &lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/16-sectest-settings.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/16-sectest-settings.gif&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;enabling-the-integration:7392f22a00640c36ba214df8def7b81e&#34;&gt;Enabling the Integration:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Visit the Settings &amp;gt; Integrations &amp;gt; &lt;a href=&#34;https://app.barricade.io/dashboard/settings/integration/csi&#34;&gt;C.I. Security Testing&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;Slide the switch to &lt;strong&gt;enable&lt;/strong&gt; the integration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Copy&lt;/strong&gt; the webhook url that is generated.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;submitting-tests:7392f22a00640c36ba214df8def7b81e&#34;&gt;Submitting Tests:&lt;/h2&gt;

&lt;p&gt;To submit a report, you&amp;rsquo;ll need to make a HTTP post request to the webhook URL. Webhooks are user-defined HTTP callbacks - triggered by some an, such as pushing code to a repository.&lt;/p&gt;

&lt;p&gt;Currently, we support Wapiti test results in JSON format.&lt;br /&gt;
The request body may contain:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type: &#39;wapiti&#39;, // required, reporting type
data: &#39;test result&#39;, // required, rtest result in text
commit_id: &#39;171fdce&#39;, // commit Id
commit_username: &#39;sakaenakajima&#39;, // username
commit_organization: &#39;Barricade&#39;, // organization
commit_repository: &#39;webapp&#39;, // repository name
commit_branch: &#39;feature-ci-sec&#39;, // branch name
commit_compare_url: &#39;https://github.com/barricadeio/internal-admin/compare/81c1235767ee...171fdce6f3b0&#39;, // compare URL
build_number: &#39;1660&#39;, // build number
build_link: &#39;https://circleci.com/gh/barricadeio/webapp/1660&#39; // build URL
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;example-request:7392f22a00640c36ba214df8def7b81e&#34;&gt;Example Request&lt;/h2&gt;

&lt;p&gt;The following example reads a test result from &lt;code&gt;wapiti.json&lt;/code&gt;, builds a request body and submits it to the webhook.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jq -r &#39;{type:&amp;quot;wapiti&amp;quot;, &amp;quot;data&amp;quot;: tostring}&#39; wapiti.json | curl -X POST -H &amp;quot;Content-Type: application/json&amp;quot; -d @- https://app.barricade.io/services/56294f3ef8f68d452e3ce561/csi/dee1aa08-bc80-48ba-844b-1c8c71f0ccdf
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;vulnerabilities&amp;quot;:{
    &amp;quot;Cross Site Scripting&amp;quot;:[
      {
        &amp;quot;info&amp;quot;:&amp;quot;XSS vulnerability found via injection in the parameter name&amp;quot;,
        &amp;quot;http_request&amp;quot;:&amp;quot;GET /page?name=%3Cscript%3Ealert%28%27w2e6ijy9jc%27%29%3C%2Fscript%3E HTTP/1.1\nHost: 172.17.42.1:80\n&amp;quot;,
        &amp;quot;level&amp;quot;:&amp;quot;1&amp;quot;,
        &amp;quot;curl_command&amp;quot;:&amp;quot;curl \&amp;quot;http://172.17.42.1:80/page?name=%3Cscript%3Ealert%28%27w2e6ijy9jc%27%29%3C%2Fscript%3E\&amp;quot;&amp;quot;,
        &amp;quot;path&amp;quot;:&amp;quot;/page&amp;quot;,
        &amp;quot;parameter&amp;quot;:&amp;quot;name&amp;quot;,
        &amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;
      }
    ],
    &amp;quot;Htaccess Bypass&amp;quot;:[
    ],
    &amp;quot;Backup file&amp;quot;:[
    ],
    &amp;quot;SQL Injection&amp;quot;:[
    ],
    &amp;quot;Blind SQL Injection&amp;quot;:[
    ],
    &amp;quot;File Handling&amp;quot;:[
    ],
    &amp;quot;Potentially dangerous file&amp;quot;:[
    ],
    &amp;quot;CRLF Injection&amp;quot;:[
    ],
    &amp;quot;Commands execution&amp;quot;:[
    ]
  },
  &amp;quot;infos&amp;quot;:{
    &amp;quot;date&amp;quot;:&amp;quot;Mon, 28 Sep 2015 14:26:00 +0000&amp;quot;,
    &amp;quot;scope&amp;quot;:&amp;quot;folder&amp;quot;,
    &amp;quot;version&amp;quot;:&amp;quot;Wapiti 2.3.0&amp;quot;,
    &amp;quot;target&amp;quot;:&amp;quot;http://172.17.42.1:80&amp;quot;
  },
  &amp;quot;classifications&amp;quot;:{
    &amp;quot;Resource consumption&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;CWE-400: Uncontrolled Resource Consumption (&#39;Resource Exhaustion&#39;)&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/400.html&amp;quot;,
        &amp;quot;http://www.owasp.org/index.php/Asymmetric_resource_consumption_(amplification)&amp;quot;:&amp;quot;http://www.owasp.org/index.php/Asymmetric_resource_consumption_(amplification)&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;The involved script is maybe using the server resources (CPU, memory, network, file access...) in a non-efficient way&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;Resource consumption description&amp;quot;
    },
    &amp;quot;Internal Server Error&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;Wikipedia article for 5xx HTTP error codes&amp;quot;:&amp;quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_Error&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;More information about the error should be found in the server logs.&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;Internal server error description&amp;quot;
    },
    &amp;quot;Cross Site Scripting&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;CWE-79: Improper Neutralization of Input During Web Page Generation (&#39;Cross-site Scripting&#39;)&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/79.html&amp;quot;,
        &amp;quot;http://en.wikipedia.org/wiki/Cross-site_scripting&amp;quot;:&amp;quot;http://en.wikipedia.org/wiki/Cross-site_scripting&amp;quot;,
        &amp;quot;VulneraNET wiki: Cross Site Scripting Flaw article&amp;quot;:&amp;quot;http://lab.gsi.dit.upm.es/semanticwiki/index.php/Cross_Site_Scripting_Flaw&amp;quot;,
        &amp;quot;http://www.owasp.org/index.php/Cross_Site_Scripting&amp;quot;:&amp;quot;http://www.owasp.org/index.php/Cross_Site_Scripting&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;The best way to protect a web application from XSS attacks is ensure that the application performs validation of all headers, cookies, query strings, form fields, and hidden fields. Encoding user supplied output in the server side can also defeat XSS vulnerabilities by preventing inserted scripts from being transmitted to users in an executable form. Applications can gain significant protection from javascript based attacks by converting the following characters in all generated output to the appropriate HTML entity encoding: &amp;lt;, &amp;gt;, &amp;amp;, &amp;quot;, &#39;, (, ), #, %, ; , +, -.&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;Cross-site scripting (XSS) is a type of computer security vulnerability typically found in web applications which allow code injection by malicious web users into the web pages viewed by other users. Examples of such code include HTML code and client-side scripts.&amp;quot;
    },
    &amp;quot;Htaccess Bypass&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;http://blog.teusink.net/2009/07/common-apache-htaccess-misconfiguration.html&amp;quot;:&amp;quot;http://blog.teusink.net/2009/07/common-apache-htaccess-misconfiguration.html&amp;quot;,
        &amp;quot;CWE-538: File and Directory Information Exposure&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/538.html&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;Make sure every HTTP method is forbidden if the credentials are bad.&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;htaccess files are used to restrict access to some files or HTTP method. In some case it may be possible to bypass this restriction and access the files.&amp;quot;
    },
    &amp;quot;Backup file&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;Testing for Old, Backup and Unreferenced Files (OWASP-CM-006)&amp;quot;:&amp;quot;http://www.owasp.org/index.php/Testing_for_Old,_Backup_and_Unreferenced_Files_(OWASP-CM-006)&amp;quot;,
        &amp;quot;CWE-530: Exposure of Backup File to an Unauthorized Control Sphere&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/530.html&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;The webadmin must manually delete the backup files or remove it from the web root. He should also reconfigure its editor to deactivate automatic backups.&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;It may be possible to find backup files of scripts on the webserver that the web-admin put here to save a previous version or backup files that are automaticallygenerated by the software editor used (like for example Emacs). These copies may reveal interesting informations like source code or credentials&amp;quot;
    },
    &amp;quot;SQL Injection&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;http://www.owasp.org/index.php/SQL_Injection&amp;quot;:&amp;quot;http://www.owasp.org/index.php/SQL_Injection&amp;quot;,
        &amp;quot;http://en.wikipedia.org/wiki/SQL_injection&amp;quot;:&amp;quot;http://en.wikipedia.org/wiki/SQL_injection&amp;quot;,
        &amp;quot;CWE-89: Improper Neutralization of Special Elements used in an SQL Command (&#39;SQL Injection&#39;)&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/89.html&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;To protect against SQL injection, user input must not directly be embedded in SQL statements. Instead, user input must be escaped or filtered or parameterized statements must be used.&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;SQL injection vulnerabilities allow an attacker to alter the queries executed on the backend database. An attacker may then be able to extract or modify informations stored in the database or even escalate his privileges on the system.&amp;quot;
    },
    &amp;quot;Blind SQL Injection&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;CWE-89: Improper Neutralization of Special Elements used in an SQL Command (&#39;SQL Injection&#39;)&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/89.html&amp;quot;,
        &amp;quot;http://www.imperva.com/resources/adc/blind_sql_server_injection.html&amp;quot;:&amp;quot;http://www.imperva.com/resources/adc/blind_sql_server_injection.html&amp;quot;,
        &amp;quot;http://www.owasp.org/index.php/Blind_SQL_Injection&amp;quot;:&amp;quot;http://www.owasp.org/index.php/Blind_SQL_Injection&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;To protect against SQL injection, user input must not directly be embedded in SQL statements. Instead, user input must be escaped or filtered or parameterized statements must be used.&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;Blind SQL injection is a technique that exploits a vulnerability occurring in the database of an application. This kind of vulnerability is harder to detect than basic SQL injections because no error message will be displayed on the webpage.&amp;quot;
    },
    &amp;quot;File Handling&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;http://www.owasp.org/index.php/Path_Traversal&amp;quot;:&amp;quot;http://www.owasp.org/index.php/Path_Traversal&amp;quot;,
        &amp;quot;http://www.acunetix.com/websitesecurity/directory-traversal.htm&amp;quot;:&amp;quot;http://www.acunetix.com/websitesecurity/directory-traversal.htm&amp;quot;,
        &amp;quot;CWE-22: Improper Limitation of a Pathname to a Restricted Directory (&#39;Path Traversal&#39;)&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/22.html&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;Prefer working without user input when using file system calls. Use indexes rather than actual portions of file names when templating or using language files (eg: value 5 from the user submission = Czechoslovakian, rather than expecting the user to return &#39;Czechoslovakian&#39;). Ensure the user cannot supply all parts of the path - surround it with your path code. Validate the user&#39;s input by only accepting known good - do not sanitize the data. Use chrooted jails and code access policies to restrict where the files can be obtained or saved to.&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;This attack is also known as Path or Directory Traversal, its aim is the access to files and directories that are stored outside the web root folder. The attacker tries to explore the directories stored in the web server. The attacker uses some techniques, for instance, the manipulation of variables that reference files with &#39;dot-dot-slash (../)&#39; sequences and its variations to move up to root directory to navigate through the file system.&amp;quot;
    },
    &amp;quot;Potentially dangerous file&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;The Open Source Vulnerability Database&amp;quot;:&amp;quot;http://osvdb.org/&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;Make sure the script is up-to-date and restrict access to it if possible&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;A file with potential vulnerabilities has been found on the website.&amp;quot;
    },
    &amp;quot;CRLF Injection&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;CWE-93: Improper Neutralization of CRLF Sequences (&#39;CRLF Injection&#39;)&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/93.html&amp;quot;,
        &amp;quot;http://www.owasp.org/index.php/CRLF_Injection&amp;quot;:&amp;quot;http://www.owasp.org/index.php/CRLF_Injection&amp;quot;,
        &amp;quot;http://www.acunetix.com/websitesecurity/crlf-injection.htm&amp;quot;:&amp;quot;http://www.acunetix.com/websitesecurity/crlf-injection.htm&amp;quot;,
        &amp;quot;VulneraNET wiki: CRLF Injection article&amp;quot;:&amp;quot;http://lab.gsi.dit.upm.es/semanticwiki/index.php/CRLF_Injection&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;Check the submitted parameters and do not allow CRLF to be injected by filtering CRLF&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;The term CRLF refers to Carriage Return (ASCII 13, \\r) Line Feed (ASCII 10, \\n). They&#39;re used to note the termination of a line, however, dealt with differently in today&#39;s popular Operating Systems. For example: in Windows both a CR and LF are required to note the end of a line, whereas in Linux/UNIX a LF is only required. This combination of CR and LR is used for example when pressing &#39;Enter&#39; on the keyboard. Depending on the application being used, pressing &#39;Enter&#39; generally instructs the application to start a new line, or to send a command.&amp;quot;
    },
    &amp;quot;Commands execution&amp;quot;:{
      &amp;quot;ref&amp;quot;:{
        &amp;quot;CWE-78: Improper Neutralization of Special Elements used in an OS Command (&#39;OS Command Injection&#39;)&amp;quot;:&amp;quot;http://cwe.mitre.org/data/definitions/78.html&amp;quot;,
        &amp;quot;http://www.owasp.org/index.php/Command_Injection&amp;quot;:&amp;quot;http://www.owasp.org/index.php/Command_Injection&amp;quot;
      },
      &amp;quot;sol&amp;quot;:&amp;quot;Prefer working without user input when using file system calls&amp;quot;,
      &amp;quot;desc&amp;quot;:&amp;quot;This attack consists in executing system commands on the server. The attacker tries to inject this commands in the request parameters&amp;quot;
    }
  },
  &amp;quot;anomalies&amp;quot;:{
    &amp;quot;Resource consumption&amp;quot;:[
    ],
    &amp;quot;Internal Server Error&amp;quot;:[
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting-c-i-test-webhooks:7392f22a00640c36ba214df8def7b81e&#34;&gt;Troubleshooting C.I. Test Webhooks&lt;/h3&gt;

&lt;p&gt;If you&amp;rsquo;re experiencing issues submitting a test, try generating a new webhook URL on the settings page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/using-barricade/16-regen.gif&#34; alt=&#34;https://docs.barricade.io/src/img/using-barricade/16-regen.gif&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updating Agents</title>
      <link>https://docs.barricade.io/using-barricade/updating-agents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/updating-agents/</guid>
      <description>

&lt;p&gt;Agents are designed with strict constraints for security and performance reasons; to send but not to receive. This means that Barricade can never modify an agent running on your server - and neither can anybody else.&lt;/p&gt;

&lt;p&gt;From time to time, we will notify you of &lt;a href=&#34;https://docs.barricade.io/changelog&#34;&gt;updates and improvements&lt;/a&gt;, prompting you to run an Agent update to ensure you are running the latest version. You maintain full control over the Agent - we can’t push code to your server.&lt;/p&gt;

&lt;h2 id=&#34;how-to-update-an-agent:d5151d15c54bda419149e5e798bdf0b2&#34;&gt;How to Update an Agent&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;To apply an update, re-run the install command:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/getting-started/drawer-opening.gif&#34; alt=&#34;https://docs.barricade.io/src/img/getting-started/drawer-opening.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instructions:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click the New Agent button to open the installer section&lt;/li&gt;
&lt;li&gt;Copy the install command&lt;/li&gt;
&lt;li&gt;Connect to your server and run the command (&lt;a href=&#34;https://docs.barricade.io/getting-started/#installing-an-agent&#34;&gt;see our SSH guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;When the install command is finished, the new Agent will be detected automatically &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.barricade.io/src/img/getting-started/drawer-detection.gif&#34; alt=&#34;https://docs.barricade.io/src/img/getting-started/drawer-detection.gif&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;finding-out-about-updates:d5151d15c54bda419149e5e798bdf0b2&#34;&gt;Finding Out About Updates&lt;/h2&gt;

&lt;p&gt;You can find details of &lt;a href=&#34;https://docs.barricade.io/changelog&#34;&gt;Product Changes&lt;/a&gt; and Agent updates &lt;a href=&#34;https://docs.barricade.io/changelog&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Agent Controls</title>
      <link>https://docs.barricade.io/using-barricade/pausing-retiring-agents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.barricade.io/using-barricade/pausing-retiring-agents/</guid>
      <description>&lt;p&gt;The Agents section of the app interface provides a breakdown of the Agents you have running:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;state of the Agent (active/inactive)&lt;/li&gt;
&lt;li&gt;how much data they’re using in the monitoring process&lt;/li&gt;
&lt;li&gt;cost of each Agent in terms of GB&lt;/li&gt;
&lt;li&gt;ability to pause and retire Agents&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
